# Licensed under the Apache License: http://www.apache.org/licenses/LICENSE-2.0
# For details: https://gitlab.com/mlrep/mldev/-/blob/master/NOTICE.md

context: &context
  dataset: !function src/experiment.get_boston_dataset
  hidden_loops: !function src/experiment.HiddenLoopsExperiment
  single_model: !function src/experiment.single_model_experiment
  gbr_model: !function src/experiment.gbr_model
  ridge_model: !function src/experiment.ridge_model

default_model: &default_params
  gbr_model:
    n_estimators: 150
    max_depth: 3
    criterion: 'mae'
    loss: 'huber'  
  ridge_model:


single_model: &single_model !PythonStage
  <<: *context
  params:
    <<: *default_params
  models: 
    gbr: !eval ${self.gbr_model(self.params.gbr_model)}
    ridge: !eval ${self.ridge_model(self.params.ridge_model)}
  python: 
    - !exec > 
             self.single_model(X=self.dataset[0], y=self.dataset[1], model=self.model['gbr']
    - !exec >
             self.single_model(X=self.dataset[0], y=self.dataset[1], model=self.model['ridge'


hidden_loops: &hidden_loops
  <<: *context
  params:
    <<: *default_params
    adherence: 0.2
    usage: 1.0
    step: 10
  models:
    gbr: !eval ${self.gbr_model(self.params.gbr_model)}
    ridge: !eval ${self.ridge_model(self.params.ridge_model)}
  python:
    - !exec >
              hl = self.hidden_loop_experiment(X=self.dataset[0], 
                                               y=self.dataset[1], 
                                               model=self.model['gbr'], 
                                               model_name='gbr')
              hl.prepare_data() 
              hl.hidden_loop_experiment(adherence=self.params.adherence,
                                        usage=self.params.usage,
                                        step=self.params.step)
              hl.plot_results(path='./results')

pipeline:
  runs:
    - *single_model
    - *hidden_loops
